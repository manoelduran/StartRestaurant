{"ast":null,"code":"var _jsxFileName = \"/home/manoel/Codigos/treinamento/aulas/04/Startinha/src/components/ModalEditFood/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport { useState } from 'react';\nimport { FoodContext } from '../../context/FoodContext';\nimport { Container, ModalDiv, ModalContent } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ModalEditFood() {\n  _s();\n\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState(0);\n  const [description, setDescription] = useState('');\n  const [image, setImage] = useState('');\n  const {\n    handleEditModalClose,\n    foods,\n    setFoods\n  } = useContext(FoodContext);\n\n  async function handleAddUpdated(event) {\n    event.preventDefault();\n    foods.map(food => {\n      if (food.foodName === name) {\n        food.foodIimage = image;\n        food.foodDescription = description;\n        food.foodPrice = price;\n      }\n\n      return food;\n    });\n    console.log(foods);\n    setFoods(foods);\n    localStorage.setItem('foods', JSON.stringify(foods));\n    handleEditModalClose();\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(ModalDiv, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEditModalClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Editar Prato\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: image,\n        onChange: event => setImage(event.target.value),\n        placeholder: \"Url da Imagem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: name,\n        onChange: event => setName(event.target.value),\n        placeholder: \"Nome\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: description,\n        onChange: event => setDescription(event.target.value),\n        placeholder: \"Descri\\xE7\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: price,\n        onChange: event => setPrice(Number(event.target.value)),\n        placeholder: \"Valor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: handleAddUpdated,\n        children: \"Editar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ModalEditFood, \"xqwwOnalEEwDz3W63h7eBw2f05E=\");\n\n_c = ModalEditFood;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalEditFood\");","map":{"version":3,"sources":["/home/manoel/Codigos/treinamento/aulas/04/Startinha/src/components/ModalEditFood/index.tsx"],"names":["useContext","useState","FoodContext","Container","ModalDiv","ModalContent","ModalEditFood","name","setName","price","setPrice","description","setDescription","image","setImage","handleEditModalClose","foods","setFoods","handleAddUpdated","event","preventDefault","map","food","foodName","foodIimage","foodDescription","foodPrice","console","log","localStorage","setItem","JSON","stringify","target","value","Number"],"mappings":"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","sourcesContent":["import { useContext } from 'react';\nimport { useEffect } from 'react';\nimport { FormEvent, useState } from 'react';\nimport { FoodContext } from '../../context/FoodContext';\nimport { Container, ModalDiv, ModalContent } from './styles'\ninterface IFood {\n    id: string;\n    foodName: string;\n    foodDescription: string;\n    foodPrice: number;\n    foodIimage: string;\n  }\n\nexport function ModalEditFood() {\n    const [name, setName] = useState('');\n    const [price, setPrice] = useState(0);\n    const [description, setDescription] = useState('');\n    const [image, setImage] = useState('');\n    const { handleEditModalClose, foods , setFoods} = useContext(FoodContext)\n  \n    async function handleAddUpdated(event: FormEvent) {\n        event.preventDefault()\n        foods.map((food: IFood) => {\n            if(food.foodName === name){\n                food.foodIimage = image\n                food.foodDescription = description\n                food.foodPrice = price\n            }\n            return food\n        })\n        console.log(foods)\n\n        setFoods(foods)\n        localStorage.setItem('foods', JSON.stringify(foods));\n\n        handleEditModalClose()\n    }\n\n\n\n    return (\n        <Container>\n            <ModalDiv>\n                <button onClick={handleEditModalClose}>Close</button>\n            </ModalDiv>\n            <ModalContent>\n                <h2>Editar Prato</h2>\n                <input value={image} onChange={event => setImage(event.target.value)} placeholder=\"Url da Imagem\" />\n                <input value={name} onChange={event => setName(event.target.value)} placeholder=\"Nome\" />\n                <input value={description} onChange={event => setDescription(event.target.value)} placeholder=\"Descrição\" />\n                <input value={price} onChange={event => setPrice(Number(event.target.value))} placeholder=\"Valor\" />\n                <button type=\"submit\" onClick={handleAddUpdated}>Editar</button>\n            </ModalContent>\n        </Container>\n    );\n}"]},"metadata":{},"sourceType":"module"}