{"ast":null,"code":"var _jsxFileName = \"/home/manoel/Codigos/treinamento/aulas/04/Startinha/src/pages/Dashboard/index.tsx\",\n    _s = $RefreshSig$();\n\nimport Header from '../../components/Header';\nimport api from '../../services/api';\nimport Food from '../../components/Food';\nimport { FoodsContainer } from './styles';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Dashboard() {\n  _s();\n\n  const [foods, setFoods] = useState([]);\n  const [editingFood, setEditingFood] = useState({});\n  const [modalOpen, setModalOpen] = useState(false);\n  const [editModalOpen, setEditModalOpen] = useState(false);\n  useEffect(() => {\n    async function getFoods() {\n      const response = await api.get('/foods');\n      setFoods(response.data);\n    }\n\n    getFoods();\n  }, []);\n\n  const handleAddFood = async food => {\n    try {\n      const response = await api.post('/foods', { ...food,\n        available: true\n      });\n      setFoods([...foods, response.data]);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleUpdateFood = async food => {\n    try {\n      const foodUpdated = await api.put(`/foods/${editingFood.id}`, { ...editingFood,\n        ...food\n      });\n      const foodsUpdated = foods.map(f => f.id !== foodUpdated.data.id ? f : foodUpdated.data);\n      setFoods(foodsUpdated);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleDeleteFood = async id => {\n    await api.delete(`/foods/${id}`);\n    const foodsFiltered = foods.filter(food => food.id !== id);\n    setFoods(foodsFiltered);\n  };\n\n  const toggleModal = () => {\n    setModalOpen(!modalOpen);\n  };\n\n  const toggleEditModal = () => {\n    setEditModalOpen(!editModalOpen);\n  };\n\n  const handleEditFood = food => {\n    setEditModalOpen(true);\n    setEditingFood(food);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      openModal: toggleModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FoodsContainer, {\n      \"data-testid\": \"foods-list\",\n      children: foods && foods.map(food => /*#__PURE__*/_jsxDEV(Food, {\n        food: food,\n        handleDelete: handleDeleteFood,\n        handleEditFood: handleEditFood\n      }, food.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Dashboard, \"c3pyTA+giFki1g1+ZSGQhz9Jl5Y=\");\n\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/manoel/Codigos/treinamento/aulas/04/Startinha/src/pages/Dashboard/index.tsx"],"names":["Header","api","Food","FoodsContainer","useState","useEffect","Dashboard","foods","setFoods","editingFood","setEditingFood","modalOpen","setModalOpen","editModalOpen","setEditModalOpen","getFoods","response","get","data","handleAddFood","food","post","available","err","console","log","handleUpdateFood","foodUpdated","put","id","foodsUpdated","map","f","handleDeleteFood","delete","foodsFiltered","filter","toggleModal","toggleEditModal","handleEditFood"],"mappings":"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","sourcesContent":["import Header from '../../components/Header';\nimport api from '../../services/api';\nimport Food from '../../components/Food';\nimport { FoodsContainer } from './styles';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n\ninterface IFood {\n  id: number;\n  name: string;\n  description: string;\n  price: number;\n  image: string;\n}\n\ninterface AddFood {\n  image: string;\n  name: string;\n  price: string;\n  description: string;\n}\n\nexport default function Dashboard() {\n  const [foods, setFoods] = useState<IFood[]>([]);\n  const [editingFood, setEditingFood] = useState<IFood>({} as IFood);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [editModalOpen, setEditModalOpen] = useState(false);\n\n  useEffect(() => {\n    async function getFoods() {\n      const response = await api.get('/foods');\n      setFoods(response.data);\n    }\n    getFoods();\n  }, [])\n\n  const handleAddFood = async (food: AddFood): Promise<void> => {\n    try {\n      const response = await api.post('/foods', {\n        ...food,\n        available: true,\n      });\n      setFoods([...foods, response.data]);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleUpdateFood = async (food: AddFood): Promise<void> => {\n    try {\n      const foodUpdated = await api.put(\n        `/foods/${editingFood.id}`,\n        { ...editingFood, ...food },\n      );\n      const foodsUpdated = foods.map(f =>\n        f.id !== foodUpdated.data.id ? f : foodUpdated.data,\n      );\n      setFoods(foodsUpdated);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleDeleteFood = async (id: number) => {\n    await api.delete(`/foods/${id}`);\n    const foodsFiltered = foods.filter(food => food.id !== id);\n    setFoods(foodsFiltered);\n  }\n\n  const toggleModal = () => {\n    setModalOpen(!modalOpen);\n  }\n\n  const toggleEditModal = () => {\n    setEditModalOpen(!editModalOpen);\n  }\n\n  const handleEditFood = (food: IFood) => {\n    setEditModalOpen(true);\n    setEditingFood(food);\n  }\n\n  return (\n    <>\n      <Header openModal={toggleModal} />\n      <FoodsContainer data-testid=\"foods-list\">\n        {foods &&\n          foods.map(food => (\n            <Food\n              key={food.id}\n              food={food}\n              handleDelete={handleDeleteFood}\n              handleEditFood={handleEditFood}\n            />\n          ))}\n      </FoodsContainer>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}