{"ast":null,"code":"var _jsxFileName = \"/home/manoel/Codigos/treinamento/aulas/04/Startinha/src/context/FoodContext.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n;\n;\nexport const FoodContext = /*#__PURE__*/React.createContext({});\nexport function FoodProvider({\n  children\n}) {\n  _s();\n\n  var _JSON$parse;\n\n  const [foods, setFoods] = useState((_JSON$parse = JSON.parse(localStorage.getItem('foods'))) !== null && _JSON$parse !== void 0 ? _JSON$parse : []);\n  const [updatedFood, setUpdatedFood] = useState({});\n  const [editModalOpen, setEditModalOpen] = useState(false);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  function handleOpenModal() {\n    setIsModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setIsModalVisible(false);\n  }\n\n  function handleEditModalOpen() {\n    setEditModalOpen(true);\n  }\n\n  function handleEditModalClose() {\n    setEditModalOpen(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(FoodContext.Provider, {\n    value: {\n      foods,\n      setFoods,\n      isModalVisible,\n      setIsModalVisible,\n      handleOpenModal,\n      handleCloseModal,\n      handleEditModalOpen,\n      handleEditModalClose,\n      editModalOpen,\n      setEditModalOpen,\n      setUpdatedFood,\n      updatedFood\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FoodProvider, \"vojMf6LPREmc3uSCYBwxzFfSHk8=\");\n\n_c = FoodProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"FoodProvider\");","map":{"version":3,"sources":["/home/manoel/Codigos/treinamento/aulas/04/Startinha/src/context/FoodContext.tsx"],"names":["React","useState","FoodContext","createContext","FoodProvider","children","foods","setFoods","JSON","parse","localStorage","getItem","updatedFood","setUpdatedFood","editModalOpen","setEditModalOpen","isModalVisible","setIsModalVisible","handleOpenModal","handleCloseModal","handleEditModalOpen","handleEditModalClose"],"mappings":";;;AAAA,OAAOA,KAAP,IAA2BC,QAA3B,QAA2C,OAA3C;;AAIC;AAqBA;AAED,OAAO,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAkC,EAAlC,CAApB;AAEP,OAAO,SAASC,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAuD;AAAA;;AAAA;;AAC5D,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,gBAAUO,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAV,qDAAwD,EAAxD,CAAlC;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAQ,EAAR,CAA9C;AACA,QAAM,CAACa,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACe,cAAD,EAAiBC,iBAAjB,IAAsChB,QAAQ,CAAC,KAAD,CAApD;;AACA,WAASiB,eAAT,GAA2B;AACzBD,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD;;AACD,WAASE,gBAAT,GAA4B;AAC1BF,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD;;AAED,WAASG,mBAAT,GAA+B;AAC7BL,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD;;AACD,WAASM,oBAAT,GAAgC;AAC9BN,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD;;AAED,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAET,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBS,MAAAA,cAAnB;AAAmCC,MAAAA,iBAAnC;AAAsDC,MAAAA,eAAtD;AAAuEC,MAAAA,gBAAvE;AAAyFC,MAAAA,mBAAzF;AAA8GC,MAAAA,oBAA9G;AAAqIP,MAAAA,aAArI;AAAoJC,MAAAA,gBAApJ;AAAsKF,MAAAA,cAAtK;AAAsLD,MAAAA;AAAtL,KAA7B;AAAA,cACGP;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAxBeD,Y;;KAAAA,Y","sourcesContent":["import React, { ReactNode, useState } from \"react\";\n\ninterface FoodProviderProps {\n  children: ReactNode;\n};\ninterface IFood {\n  id: string;\n  foodName: string;\n  foodDescription: string;\n  foodPrice: number;\n  foodIimage: string;\n}\ninterface IFoodContext {\n  foods: IFood[];\n  setFoods: (foods: IFood[]) => void;\n  isModalVisible: boolean;\n  editModalOpen: boolean;\n  updatedFood: IFood;\n  setUpdatedFood: (updatedFood: IFood) => void;\n  setEditModalOpen: (editModalOpen: boolean) => void;\n  setIsModalVisible: (isModalVisible: boolean) => void;\n  handleOpenModal: () => void;\n  handleCloseModal: () => void;\n  handleEditModalOpen: () => void;\n  handleEditModalClose: () => void;\n};\n\nexport const FoodContext = React.createContext<IFoodContext>({} as IFoodContext);\n\nexport function FoodProvider({ children }: FoodProviderProps) {\n  const [foods, setFoods] = useState<IFood[]>(JSON.parse(localStorage.getItem('foods')!) ?? []);\n  const [updatedFood, setUpdatedFood] = useState<IFood>({} as IFood)\n  const [editModalOpen, setEditModalOpen] = useState(false);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  function handleOpenModal() {\n    setIsModalVisible(true)\n  }\n  function handleCloseModal() {\n    setIsModalVisible(false)\n  }\n\n  function handleEditModalOpen() {\n    setEditModalOpen(true)\n  }\n  function handleEditModalClose() {\n    setEditModalOpen(false)\n  }\n\n  return (\n    <FoodContext.Provider value={{ foods, setFoods, isModalVisible, setIsModalVisible, handleOpenModal, handleCloseModal, handleEditModalOpen, handleEditModalClose , editModalOpen, setEditModalOpen, setUpdatedFood, updatedFood}}>\n      {children}\n    </FoodContext.Provider>\n  );\n}"]},"metadata":{},"sourceType":"module"}